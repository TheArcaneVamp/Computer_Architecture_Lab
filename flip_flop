module JK_flipflop(    input J,   
input K,    input CLK,    input PR,   
input CLR,    output Q,    output P  
);


                              reg
qm=0;


                              always
@(posedge CLK)


                              if(PR==1)
begin


                              qm=1;


                              end


                              else
if(CLR==0) begin


                              qm=0;


                              end


                              else
if(J==0 && K==1) begin


                              qm=0;


                              end


                              else
if(J==1 && K==0) begin


                              qm=1;


                              end


                              else
if(J==0 && K==0) begin


                              qm=P;


                              end


                              else
if(J==1 && K==1) begin


                              qm=~P;


                              end


                              assign
P=qm;


                              assign
Q=~P;


endmodule


 


 


 


##########  
Testbench  ##########


module JK_flipflop_test;


               //
Inputs


               reg
J;


               reg
K;


               reg
CLK;


               reg
CLR;


               reg
PR;


               //
Outputs


               wire
Q;


               wire
P;


               //
Instantiate the Unit Under Test (UUT)


               JK_flipflop
uut (  .J(J), .K(K), .CLK(CLK), .CLR(CLR),  .PR(PR), .Q(Q),
.P(P));


               initial
begin


                              //
Initialize Inputs


                              CLK
= 0;


                              //
Wait 100 ns for global reset to finish


                              J=0;


                              K=0;


                              CLR=1;


                              PR=0;


                              #100;


                              J=0;


                              K=1;


                              CLR=1;


                              PR=0;


                              #100;


                              J=1;


                              K=0;


                              CLR=1;


                              PR=0;


                              #100;


                              J=1;


                              K=1;


                              CLR=1;


                              PR=0;


                              #100;


                              J=0;


                              K=0;


 #100;


                              J=0;


                              K=0;


                              CLR=1;


                              PR=1;


                              #100;


                              J=0;


                              K=0;


                              CLR=0;


                              PR=0;


                              #100;


               end


   
always #50 CLK=~CLK;  


endmodule